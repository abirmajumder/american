package com.mains;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class SimpleQuery<T> {
	
	String insert, update;
	List<String> columns;
	
	private SimpleQuery() { 
		this.columns = new ArrayList<>();
	}
	
	public static <T> SimpleQuery<T> create( Class<T> type  ) {
		
		SimpleQuery<T> query = new SimpleQuery<>();
		StringBuilder insert = new StringBuilder( "INSERT INTO " + type.getSimpleName() + " ( " );
		
		for( Field field : type.getDeclaredFields() ) {
			query.columns.add(field.getName());
		}
		
		insert
			.append( query.columns.stream().collect(Collectors.joining(",")) )
			.append(" ) values ( ")
			.append( query.columns.stream().map( c -> "?").collect(Collectors.joining(",")))
			.append(" )");
		query.setInsert( insert.toString().toUpperCase() );
		
		return query;
	}
	
	public String getInsert() {
		return insert;
	}
	public void setInsert(String insert) {
		this.insert = insert;
	}
	
	public String getUpdate() {
		return update;
	}
	public void setUpdate(String update) {
		this.update = update;
	}
	
	public List<String> getColumns() {
		return columns;
	}
	public void setColumns(List<String> columns) {
		this.columns = columns;
	}
	
}
